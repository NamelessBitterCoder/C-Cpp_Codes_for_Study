clear;
clc;
A = input('请输入矩阵A: ');
A =[1 1 4 1/3 3;
 1 1 4 1/3 3;
 1/4 1/4 1 1/3 1/2;
 3 3 3 1 3;
 1/3 1/3 2 1/3 1];
[n, n] = size(A);
%默认情况下输入没有错误；
ERROR = 0;
%（1）检查矩阵A的维数是否大于1或者不是方阵；
[r, c] = size(A);
if r ~= c || r <= 1
    ERROR = 1;
end

%（2）检查是否为正反逆矩阵，即a_ij > 0 且 a_ij * a_ji = 1;
if ERROR == 0
    if sum(sum(A <= 0)) > 0
        ERROR = 2;
    end
end

%（3）检查n是否超过15，因为RI向量为15维；
if ERROR == 0
    if n > 15
        ERROR = 3;
    end
end

%（4）判断a_ij * a_ji = 1是否成立；
if ERROR == 0
    if sum(sum(A .* A' ~= ones(n))) > 0
        ERROR = 4;
    end
end
%%
%1.算术平均法求权重;
% 第一步：将判断矩阵按照列归一化（每一个元素除以其所在列的和）
% 第二步：将归一化的各列相加（按行求和，得到一个列向量）
% 第三步：将相加后的向量除以n即可得到权重向量
if ERROR == 0
    Sum_A = sum(A); %计算每一列元素的和；
    % 两个形状相同的矩阵对应元素之间的乘除法需要使用".*"和"./"
    SUM_A = repmat(Sum_A, 5, 1);
    %进行归一化处理；
    Stand_A = A ./ SUM_A;
    % a=sum(x); / a = sum(x, 1) %按列求和(得到一个行向量）;
    % a=sum(x,2);  %按行求和(得到一个列向量）;
    % a=sum(x(:));%对整个矩阵求和;
    disp('算术平均法求权重的结果是：');
    disp(sum(Stand_A, 2) / n);
%%
%2.几何平均法求权重；
% 第一步：将A的元素按照行相乘得到一个新的列向量
% 第二步：将新的向量的每个分量开 n 次方,也就是 1/n 次方
% 第三步：对该列向量进行归一化即可得到权重向量
    Product_A = prod(A, 2);  % prod函数和sum函数类似，一个用于乘，一个用于加
    Product_A_n = Product_A .^ (1 / n);
    disp('几何平均法求权重的结果为：');
    disp(Product_A_n / sum(Product_A_n));

%%
%3.特征值法求权重；
% 计算矩阵A的特征值和特征向量的函数是eig(A),其中最常用的两个用法：
% （1）E=eig(A)：求矩阵A的全部特征值，构成向量E。
% （2）[V,D]=eig(A)：求矩阵A的全部特征值，构成对角阵D，并求A的特征向量构成V的列向量。（V的每一列都是D中与之相同列的特征值的特征向量）
    [V, D] = eig(A);  %V是特征向量, D是由特征值构成的对角矩阵（除了对角线元素外，其余位置元素全为0）
    max_eig = max(max(D));  %求出最大的特征值；
    [r, c] = find(D == max_eig, 1);   % 找到D中第一个与最大特征值相等的元素的位置，记录它的行和列;
    disp('特征值法求权重的结果为：');
    disp(V(:, c) / sum(V(:, c)));
%%
%4.计算一致性比例CR；
% 当 CR < 0.10 时，我们认为判断矩阵的一致性可以接受；否则应对其进行修正；
    CI = (max_eig - n) / (n - 1);
    RI=[0 0.00001 0.52 0.89 1.12 1.26 1.36 1.41 1.46 1.49 1.52 1.54 1.56 1.58 1.59];
%RI最多支持n = 15;
    CR = CI / RI(n);
    disp('一致性指标CI = ');
    disp(CI);
    disp('一致性比例CR = ');
    disp(CR);
    if CR < 0.10
        disp('因为CR < 0.10, 所以判断矩阵A的一致性检验是可以接受的。');
    else
        disp('注意：CR >= 0.10, 需要修改判断矩阵A。')
    end
elseif ERROR == 1
    disp('请检查矩阵A的维数是否大于1或者不是方阵。');
elseif ERROR == 2
    disp('请检查矩阵A中的元素是否全大于0。');
elseif ERROR == 3
    disp('A的维数 n 超过了15， 请减少准则层的数量。');
elseif ERROR == 4
    disp('请检查A中是否存在i, j, 不满足A_ij * A_ji = 1');
end